-- 1. 다음 중 생성자에 대한 설명으로 옳지 않은 것은? C,E
A. 모든 생성자의 이름은 클래스의 이름과 동일하다.
B. 생성자는 객체를 생성하기 위한 것이다.
C. 클래스에는 기본 생성자가 반드시 하나 이상 있어야 한다. 
D. 생성자가 없는 클래스는 컴파일러가 기본 생성자를 추가한다.
E. 생성자는 오버로딩 할 수 없다.(->오버라이딩을 할 수 없다.)

-- 2. 다음 중 오버로딩 조건으로 옳지 않은 것은? C,D
A. 메서드의 이름이 같아야 한다.
B. 매개변수의 개수나 타입이 달라야 한다.
C. 리턴타입이 달라야 한다.
D. 매개변수의 이름이 달라야 한다.

-- 3. 다음 중 오버라이딩 조건으로 옳지 않은 것은? C
A. 조상의 메서드와 이름이 같아야 한다.
B. 매개변수의 수와 타입,리턴타입이 모두 같아야 한다.
C. 접근 제어자는 조상의 메서드보다 좁은 범위로만 변경할 수 있다.
D. 조상의 메서드보다 더 많은 수의 예외를 선언할 수 있다.

-- 4. 다음 중 아래 add메서드를 잘못 오버로딩 한 것은? A
long add(int a, int b) { return a+b;}
A. long add(int x, int y) { return x+y;}      //타입이 같아서 안 됨(변수는 관계 없다.)
B. long add(long a, long b) { return a+b;}
C. int add(byte a, byte b) { return a+b;}
D. int add(long a, int b) { return (int)(a+b);}

-- 5. 다음 중 초기화에 대한 설명으로 옳지 않은 것은? C
A. String 멤버변수는 “”로 자동 초기화된다.
B. 지역변수는 반드시 초기화해야 한다.
C. 생성자보다 초기화 블럭이 먼저 수행된다.
D. 인스턴스변수보다 클래스변수가 먼저 초기화된다.

-- 6. 다음 중 지역변수에 대한 설명으로 옳지 않은 것은? A
A. 자동 초기화되므로 별도의 초기화가 필요없다.
B. 지역변수가 선언된 메서드가 종료되면 지역변수도 함께 소멸된다.
C. 매서드의 매개변수로 선언된 변수도 지역변수이다.
D. 스택(stack)영역에 생성되며 가비지 컬렉터에 의해 소멸된다.


-- 7. 자바의 상속 특징 중에서 틀린 것은? C
A. 자바에서는 클래스의 다중 상속을 지원하지 않는다.
B. 자바에서는 상속의 횟수에 제한이 없다.
C. 자바에서 모든 클래스의 최상위 슈퍼 클래스는 java.lang.System 클래스이다. //java.lang.Object클래스가 최상위 슈퍼클래스임
D. 자바에서 상속을 표현하는 키워드는 extends이다.


-- 8. 다음 중 A, B, C, D 메소드가 주석 위치에 왔을 때, 에러가 나는 메소드는? C
class Super {
    public float getNum() { return 3.0f; }
    }
    public class Sub extends Super {
     /* */
    }
}
A. public void getNum(double d) { } //오버로딩
B. public float getNum() { return 4.0f; }
C. public void getNum() { } //오버라이딩 - 리턴타입이 없음
D. public double getNum(float d) { return 4.0d; }

-- 9. 다음 코드의 실행 결과는? E
class MyClass{
    int y= 12;
    public void method(int x) {
        y+=x;  //x+y -> y에 대입
        System.out.println(x);
    }
 }
public class Test  {
    public static void main(String[] args) {
        Test t = new Test();
        t.method(5);
    }
}
A. 5    
B. 10    
C. 12    
D. 17  
E. complie error


-- 10. 다음 코드의 실행 결과는? After:ABC123456
class Change {
    static String str = "ABC123";
    public static void change(String str) {
        Change.str += "456";
    }
    public static void main(String[] args) {
        String str = "ABC123";
        System.out.println(str);
        change(str);
        System.out.println("After:"+Change.str);
    }  
}

-- 11. 다음 코드의 실행 결과는? 1
public class Test {
    public int aMethod() {
        int i = 0;
        i++;
        return i;
    }
    public static void main (String args[]) {
        Test test = new Test();
        test.aMethod();
        int j = test.aMethod();
        System.out.println(j);
    }
}

-- 12. 다음 코드의 실행 결과는? D
명령) c:\> java Foo world

String[] str = {"java","Foo","world"}로 변경했다고 생각하고 풀기

public class Foo {
    public static void main(String[ ]  args ) {
        System.out.println( “Hello” + args[0] );
    }
}
A. Hello
B. Hello Foo
C. Hello world
D. Hello java
E. The code does not run.